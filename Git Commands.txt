Git commands

	git config --list  : Gives details of user (username and email ID)
	
	git config --global user.name "username"
	git config --global user.email "email@gmail.com"
	
	
Actual Git commands

	git init								:	It initializes a .git (hidden file) in our local folder

	git add filename.txt					:	To add files to the staging area
	git add .								:	To add all files to the staging area
	
	git status								:	To check the status of files (Tracked ? Untracked)
	
	git commit -m "Message"					:	To commit the changes with a message
	
	git reset HEAD~							:	To uncommit the last commit
	
	git log									:	To get details of our commits
	
	git log --oneline						:	To get our commit details in a single line
	
	git branch								:	To get the current branch (usually master)
	
	git branch -m xyz						:	To rename our branch to xyz 
	
	git commit -m "Modified Message" --amend:	To update the last commit 
	
	git remote add origin "url-remote repo" :	To link remote repository to local folder containing .git
	
	git remote -v							:	To check the remote repository linked to local folder
	
	git remote remove origin				:	To unlink remote repository and local folder
	
	git push -u origin main					:	To push commits for the first time to remote repo
	git push								:	To push commits from the second time
	
	git clone "url-remote repo"	`			:	To clone remote project to local folder
	
Branches

	git branch								:	To get the info of all local branches
	
	git branch "branch-name"				:	To create a new branch
	
	git branch -m "Modified branch-name"	:	To rename current branch 
	
	git checkout "branch-name"				:	To move to a specific branch
	git switch "branch-name"				:	To move to a specific branch
	
	git chechout -b "new branch-name"		:	To create & move to a new branch
	git switch   -c "new branch-name"		:	To create & move to a new branch
	
	git branch -d "branch-name"				:	To delete a branch (Not to be present in branch to be deleted)
	git branch -D "branch-name"				:	To force delete a branch (Not to be present in branch to be deleted)
	
	git push -u origin "branch-name"		:	To push a new branch to remote repository (initial)
	
Then, create a pull request to merge the changes in the new branch to the main branch

	git fetch --all							:	To get all remote content into local folder
	git checkout "branch-name"				:	To move to specific branch
	git pull origin "branch-name"			:	To merge all remote changes and be up to date
	
							fetch		:	Gets all remote content into local folder but it doesn't merge
							pull		:	fetch + merge
							push		:	Send all the local changes to remote repository
							
Rebasing 

	git pull origin main
	
	git checkout -b "new branch-name"
	Make few commits, 
	
	Mean while, another developer using same main branch creates a new feature branch and pushes it to
	remote repository, raises PR and merges it to the remote main branch
	
	Now, for you to push, you need to rebase your new branch to the new main branch head
	
	git chechout main
	git pull origin main
	git checkout "new branch-name"
	git rebase main
	
	Here, merge conflicts can occur if both the developers are working on the same files
	We need to manually resolve the conflicts
	
	git add .
	git rebase --continue
	vim editor opens , add a commit message and exit vim editor using esc:wq commands
	git push origin "new branch-name"
	
	raise a PR to merge it to merge the new branch to the remote main branch
	
cherry-pick
	
	when we need to push similar commits on different branches, Here, without 
	manually changing files on other branch we can use cherry-pick to copy the commits on specific branch
	
	git cherry-pick "commit-id"
	
stash
	
	Suppose you are working on 20 files, suddenly you need to stop working on these files and work on a new feature
	There are two ways to tackle this situation,
	1) Make a commit for the current changes in files and use it later
	2) stash (Temporary storage) them
	
	git stash list 							:	To get list of all changes saved
	git stash save 							:	To save the current changes 
	git stash apply							:	To get back the saved changes
	git stash pop							:	To get & remove the saved changes from stash list
	
	



	
	
	
	
	

	
	
	
	
	